// Ê£ÄÊü•ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ
console.log('üîç Environment Variables Check:')
console.log('================================')

// Ê£ÄÊü•SupabaseÈÖçÁΩÆ
console.log('üìä Supabase Configuration:')
console.log('  NEXT_PUBLIC_SUPABASE_URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? '‚úÖ Set' : '‚ùå Missing')
console.log('  NEXT_PUBLIC_SUPABASE_ANON_KEY:', process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ Set' : '‚ùå Missing')

// Ê£ÄÊü•StripeÈÖçÁΩÆ
console.log('\nüí≥ Stripe Configuration:')
console.log('  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:', process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY ? '‚úÖ Set' : '‚ùå Missing')
console.log('  STRIPE_SECRET_KEY:', process.env.STRIPE_SECRET_KEY ? '‚úÖ Set' : '‚ùå Missing')

// Ê£ÄÊü•ÂÖ∂‰ªñÈáçË¶ÅÁéØÂ¢ÉÂèòÈáè
console.log('\nüîß Other Configuration:')
console.log('  NODE_ENV:', process.env.NODE_ENV || 'Not set')
console.log('  VERCEL:', process.env.VERCEL ? '‚úÖ Vercel Environment' : '‚ùå Local Environment')

// Ê£ÄÊü•ÈÇÄËØ∑Á†ÅÈÖçÁΩÆ
console.log('\nüé´ Invite Codes:')
const inviteCodes = process.env.ADMIN_INVITE_CODES ? JSON.parse(process.env.ADMIN_INVITE_CODES) : []
console.log('  Available invite codes:', inviteCodes.length)
if (inviteCodes.length > 0) {
  console.log('  Sample invite code:', inviteCodes[0]?.code || 'N/A')
}

console.log('\nüìù Recommendations:')
if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {
  console.log('  ‚ö†Ô∏è  Supabase not configured - app will use fallback methods')
  console.log('  üí° To fix: Set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY in Vercel')
}

if (!process.env.STRIPE_SECRET_KEY) {
  console.log('  ‚ö†Ô∏è  Stripe not configured - payment features will not work')
  console.log('  üí° To fix: Set STRIPE_SECRET_KEY in Vercel')
}

if (inviteCodes.length === 0) {
  console.log('  ‚ö†Ô∏è  No invite codes available - merchant registration will fail')
  console.log('  üí° To fix: Generate invite codes from admin dashboard')
}
